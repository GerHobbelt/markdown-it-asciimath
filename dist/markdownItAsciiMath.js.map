{"version":3,"file":"markdownItAsciiMath.js","sources":["../index.js"],"sourcesContent":["\nlet katex = require('katex');\nlet assign = require('lodash.assign');\nlet defaults = {\n  useKeyword: false\n};\n\nfunction setup(md, options) {\n  if (typeof options === 'undefined') {\n    options = defaults;\n  }\n  let useKeyword = options.useKeyword;\n  console.log(useKeyword);\n\n\n  //var options = assign({}, defaults, options);\n  let defaultRender = md.renderer.rules.fence;\n\n  md.renderer.rules.fence = function (tokens, idx, options, env, self) {\n    let token = tokens[idx];\n\n    if (token.info === 'math') {\n      return render(token.content, true);\n    }\n\n    if (token.info === 'latex') {\n      return renderTeX(token.content, true);\n    }\n\n    // pass token to default renderer.\n    return defaultRender(tokens, idx, options, env, self);\n  };\n\n  md.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\n    let token = tokens[idx];\n\n    console.log(useKeyword);\n\n    if (!useKeyword) {\n      console.log('1');\n      return renderInline(token.content.trim(), false);\n    }\n    console.log('2');\n    if (token.content.substr(0, 4) === 'math') {\n      return renderInline(token.content.substr(4).trim(), false);\n    } else if (token.content.substr(0, 5) === 'latex') {\n      return renderElement(token.content.substr(5).trim(), false);\n    }\n\n\n    return defaultRender(tokens, idx, options, env, self);\n  };\n}\n\nfunction render(str, disp) {\n  // split content\n  let arr = str.trim().split('\\n');\n  let result = '';\n\n  // render each line, skipping empty lines\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      result += '<p>' + renderElement(preprocessMath(arr[i]), disp) + '<p>';\n    }\n  }\n\n  return result;\n}\n\nfunction renderTeX(str, disp) {\n  // split content\n  let arr = str.trim().split('\\n');\n  let result = '';\n\n  // render each line, skipping empty lines\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      result += '<p>' + renderElement(arr[i], disp) + '<p>';\n    }\n  }\n\n  return result;\n}\n\nfunction renderInline(str, disp) {\n  return renderElement(preprocessMath(str), disp);\n}\n\nfunction renderElement(str, disp) {\n  return katex.renderToString(str, { displayMode: disp });\n}\n\nfunction preprocessMath(str) {\n  let newstr;\n\n  // correct index-texts\n  newstr = str.replace(/_(.*?)(\\s|$|=|\\(|\\)|\\*|\\/|\\^)/g, '_($1)$2');\n\n  // parse to TeX\n  newstr = AMTparseAMtoTeX(newstr);\n\n  return newstr;\n}\n\nmodule.exports = setup;\n"],"names":["katex","require","assign","defaults","useKeyword","setup","md","options","console","log","defaultRender","renderer","rules","fence","tokens","idx","env","self","token","info","render","content","renderTeX","code_inline","renderInline","trim","substr","renderElement","str","disp","arr","split","result","i","length","preprocessMath","renderToString","displayMode","newstr","replace","AMTparseAMtoTeX","module","exports"],"mappings":";;AACA,IAAIA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,eAAD,CAApB;;AACA,IAAIE,QAAQ,GAAG;AACbC,EAAAA,UAAU,EAAE;AADC,CAAf;;AAIA,SAASC,KAAT,CAAeC,EAAf,EAAmBC,OAAnB,EAA4B;AAC1B,MAAI,OAAOA,OAAP,KAAmB,WAAvB,EAAoC;AAClCA,IAAAA,OAAO,GAAGJ,QAAV;AACD;;AACD,MAAIC,UAAU,GAAGG,OAAO,CAACH,UAAzB;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYL,UAAZ,EAL0B;;AAS1B,MAAIM,aAAa,GAAGJ,EAAE,CAACK,QAAH,CAAYC,KAAZ,CAAkBC,KAAtC;;AAEAP,EAAAA,EAAE,CAACK,QAAH,CAAYC,KAAZ,CAAkBC,KAAlB,GAA0B,UAAUC,MAAV,EAAkBC,GAAlB,EAAuBR,OAAvB,EAAgCS,GAAhC,EAAqCC,IAArC,EAA2C;AACnE,QAAIC,KAAK,GAAGJ,MAAM,CAACC,GAAD,CAAlB;;AAEA,QAAIG,KAAK,CAACC,IAAN,KAAe,MAAnB,EAA2B;AACzB,aAAOC,MAAM,CAACF,KAAK,CAACG,OAAP,EAAgB,IAAhB,CAAb;AACD;;AAED,QAAIH,KAAK,CAACC,IAAN,KAAe,OAAnB,EAA4B;AAC1B,aAAOG,SAAS,CAACJ,KAAK,CAACG,OAAP,EAAgB,IAAhB,CAAhB;AACD,KATkE;;;AAYnE,WAAOX,aAAa,CAACI,MAAD,EAASC,GAAT,EAAcR,OAAd,EAAuBS,GAAvB,EAA4BC,IAA5B,CAApB;AACD,GAbD;;AAeAX,EAAAA,EAAE,CAACK,QAAH,CAAYC,KAAZ,CAAkBW,WAAlB,GAAgC,UAAUT,MAAV,EAAkBC,GAAlB,EAAuBR,OAAvB,EAAgCS,GAAhC,EAAqCC,IAArC,EAA2C;AACzE,QAAIC,KAAK,GAAGJ,MAAM,CAACC,GAAD,CAAlB;AAEAP,IAAAA,OAAO,CAACC,GAAR,CAAYL,UAAZ;;AAEA,QAAI,CAACA,UAAL,EAAiB;AACfI,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACA,aAAOe,YAAY,CAACN,KAAK,CAACG,OAAN,CAAcI,IAAd,EAAD,EAAuB,KAAvB,CAAnB;AACD;;AACDjB,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;;AACA,QAAIS,KAAK,CAACG,OAAN,CAAcK,MAAd,CAAqB,CAArB,EAAwB,CAAxB,MAA+B,MAAnC,EAA2C;AACzC,aAAOF,YAAY,CAACN,KAAK,CAACG,OAAN,CAAcK,MAAd,CAAqB,CAArB,EAAwBD,IAAxB,EAAD,EAAiC,KAAjC,CAAnB;AACD,KAFD,MAEO,IAAIP,KAAK,CAACG,OAAN,CAAcK,MAAd,CAAqB,CAArB,EAAwB,CAAxB,MAA+B,OAAnC,EAA4C;AACjD,aAAOC,aAAa,CAACT,KAAK,CAACG,OAAN,CAAcK,MAAd,CAAqB,CAArB,EAAwBD,IAAxB,EAAD,EAAiC,KAAjC,CAApB;AACD;;AAGD,WAAOf,aAAa,CAACI,MAAD,EAASC,GAAT,EAAcR,OAAd,EAAuBS,GAAvB,EAA4BC,IAA5B,CAApB;AACD,GAlBD;AAmBD;;AAED,SAASG,MAAT,CAAgBQ,GAAhB,EAAqBC,IAArB,EAA2B;AACzB;AACA,MAAIC,GAAG,GAAGF,GAAG,CAACH,IAAJ,GAAWM,KAAX,CAAiB,IAAjB,CAAV;AACA,MAAIC,MAAM,GAAG,EAAb,CAHyB;;AAMzB,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,GAAG,CAACI,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACnC,QAAIH,GAAG,CAACG,CAAD,CAAP,EAAY;AACVD,MAAAA,MAAM,IAAI,QAAQL,aAAa,CAACQ,cAAc,CAACL,GAAG,CAACG,CAAD,CAAJ,CAAf,EAAyBJ,IAAzB,CAArB,GAAsD,KAAhE;AACD;AACF;;AAED,SAAOG,MAAP;AACD;;AAED,SAASV,SAAT,CAAmBM,GAAnB,EAAwBC,IAAxB,EAA8B;AAC5B;AACA,MAAIC,GAAG,GAAGF,GAAG,CAACH,IAAJ,GAAWM,KAAX,CAAiB,IAAjB,CAAV;AACA,MAAIC,MAAM,GAAG,EAAb,CAH4B;;AAM5B,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,GAAG,CAACI,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACnC,QAAIH,GAAG,CAACG,CAAD,CAAP,EAAY;AACVD,MAAAA,MAAM,IAAI,QAAQL,aAAa,CAACG,GAAG,CAACG,CAAD,CAAJ,EAASJ,IAAT,CAArB,GAAsC,KAAhD;AACD;AACF;;AAED,SAAOG,MAAP;AACD;;AAED,SAASR,YAAT,CAAsBI,GAAtB,EAA2BC,IAA3B,EAAiC;AAC/B,SAAOF,aAAa,CAACQ,cAAc,CAACP,GAAD,CAAf,EAAsBC,IAAtB,CAApB;AACD;;AAED,SAASF,aAAT,CAAuBC,GAAvB,EAA4BC,IAA5B,EAAkC;AAChC,SAAO7B,KAAK,CAACoC,cAAN,CAAqBR,GAArB,EAA0B;AAAES,IAAAA,WAAW,EAAER;AAAf,GAA1B,CAAP;AACD;;AAED,SAASM,cAAT,CAAwBP,GAAxB,EAA6B;AAC3B,MAAIU,MAAJ,CAD2B;;AAI3BA,EAAAA,MAAM,GAAGV,GAAG,CAACW,OAAJ,CAAY,gCAAZ,EAA8C,SAA9C,CAAT,CAJ2B;;AAO3BD,EAAAA,MAAM,GAAGE,eAAe,CAACF,MAAD,CAAxB;AAEA,SAAOA,MAAP;AACD;;AAEDG,MAAM,CAACC,OAAP,GAAiBrC,KAAjB"}